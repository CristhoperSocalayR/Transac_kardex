name: CI/CD Workflow (Docker)
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    types: [opened, synchronize, reopened]

jobs:
  build:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Set up JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu'

      # Cache Maven packages
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      # Build the project
      - name: Build with Maven
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          DATABASE_USERNAME: ${{ secrets.DATABASE_USERNAME }}
          DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
        run: |
          mvn clean package -Dspring.datasource.url=${{ secrets.DATABASE_URL }} \
                            -Dspring.datasource.username=${{ secrets.DATABASE_USERNAME }} \
                            -Dspring.datasource.password=${{ secrets.DATABASE_PASSWORD }}

      # Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Set up QEMU for cross-platform builds (optional)
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      # Build the Docker image
      - name: Build Docker Image
        run: |
          docker build --file Dockerfile \
                       --tag cris2003/gpt:${{ github.sha }} .

      # Push the Docker image to Docker Hub
      - name: Push Docker Image to Docker Hub
        run: |
          docker tag cris2003/gpt:${{ github.sha }} cris2003/gpt:latest
          docker push cris2003/gpt:${{ github.sha }}
          docker push cris2003/gpt:latest
